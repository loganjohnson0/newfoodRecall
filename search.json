[{"path":"https://loganjohnson0.github.io/newfoodRecall/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 newfoodRecall authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Logan Johnson. Author, maintainer.","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson L (2024). newfoodRecall: Extracts Visualizes Food Recall Data. R package version 0.1.0, https://loganjohnson0.github.io/newfoodRecall/, https://github.com/loganjohnson0/newfoodRecall.","code":"@Manual{,   title = {newfoodRecall: Extracts and Visualizes Food Recall Data},   author = {Logan Johnson},   year = {2024},   note = {R package version 0.1.0, https://loganjohnson0.github.io/newfoodRecall/},   url = {https://github.com/loganjohnson0/newfoodRecall}, }"},{"path":[]},{"path":"https://loganjohnson0.github.io/newfoodRecall/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extracts and Visualizes Food Recall Data","text":"can install development version foodRecall GitHub :","code":"# install.packages(\"pak\") pak::pak(\"loganjohnson0/foodRecall\")"},{"path":"https://loganjohnson0.github.io/newfoodRecall/index.html","id":"loading-package","dir":"","previous_headings":"","what":"Loading Package","title":"Extracts and Visualizes Food Recall Data","text":"","code":"library(foodRecall)"},{"path":"https://loganjohnson0.github.io/newfoodRecall/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Extracts and Visualizes Food Recall Data","text":"use package, must register API key openFDA website. free API key requires email address. receive immediately upon request. Upon issues API key , please contact openFDA office. sure share API key anyone! product uses openFDA API endorsed certified Food Drug Administration.","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/index.html","id":"save-your-api-key","dir":"","previous_headings":"","what":"Save Your API Key","title":"Extracts and Visualizes Food Recall Data","text":"developed different functions search different kinds data. can use either recall_location recall_date search data food recalls. See notation example. can also map resulting data see location recall events, impact recall, number recall events individual products recalling firm recalled.","code":"api_key <- \"YOUR API KEY\" location <- foodRecall::recall_location(api_key = api_key,                                          city = \"Ames\",                                          state = \"Iowa\")  date <- foodRecall::recall_date(api_key = api_key,                                 report_date = \"January 2023 to May 2023\") foodRecall::map_recall(data = df)"},{"path":"https://loganjohnson0.github.io/newfoodRecall/reference/recall_location.html","id":null,"dir":"Reference","previous_headings":"","what":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","title":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","text":"function scrapes openFDA API food product recall enforcement reports based user inputs location","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/reference/recall_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","text":"","code":"recall_location(   api_key,   limit = NULL,   city = NULL,   country = NULL,   distribution_pattern = NULL,   recalling_firm = NULL,   search_mode = NULL,   state = NULL,   status = NULL )"},{"path":"https://loganjohnson0.github.io/newfoodRecall/reference/recall_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","text":"api_key free api key openFDA API website limit number rows return query city City food company located country country food produced distribution_pattern Locations food distributed recalling_firm company recalling product search_mode gives user flexibility search exact matches inputs combination inputs state U.S. state recalling firm located status status recall","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/reference/recall_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","text":"data frame returned results users query API","code":""},{"path":"https://loganjohnson0.github.io/newfoodRecall/reference/recall_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function scrapes the openFDA API for food product recall enforcement reports based on user inputs of location — recall_location","text":"","code":"if (FALSE) { # \\dontrun{ recall_location(api_key = api_key, city = \"Ames\", state = \"Iowa\") recall_location(api_key = api_key, recalling_firm = \"Target\") recall_location(api_key = api_key, distribution_pattern = \"Colorado\", status = \"Ongoing\") recall_location(api_key = api_key, city = \"Iowa City, Ames, Des Moines\", state = \"Iowa\") } # }"}]
